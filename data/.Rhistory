plot(pre1,which=4)
par(mfrow=c(2,2))
plot(pre1)
data = data[c(-39, -42, -48, -96, -76, -182), ]
full.model=lm(BODYFAT ~ ., data = data)
step.model <- stepAIC(full.model, direction = "both",
trace = T)
models <- regsubsets(BODYFAT~., data = data, nvmax = 4,
method = "seqrep")
#BODYFAT ~ AGE + ADIPOSITY + NECK + CHEST + ABDOMEN + HIP + BICEPS + WRIST
library(leaps)
install.packages("leaps")
#BODYFAT ~ AGE + ADIPOSITY + NECK + CHEST + ABDOMEN + HIP + BICEPS + WRIST
library(leaps)
install.packages("shiny")
library(shiny)
models <- regsubsets(BODYFAT~., data = data, nvmax = 4,
method = "seqrep")
summary(models)
View(models)
models$np
smp_size <- floor(0.8 * nrow(data))
set.seed(123)
train_ind <- sample(seq_len(nrow(data)), size = smp_size)
train <- data[train_ind, ]
test <- data[-train_ind, ]
full.model=lm(BODYFAT ~ ., data = train)
smp_size <- floor(0.9 * nrow(data))
set.seed(123)
train_ind <- sample(seq_len(nrow(data)), size = smp_size)
train <- data[train_ind, ]
test <- data[-train_ind, ]
full.model=lm(BODYFAT ~ ., data = train)
library(MASS)
step.model <- stepAIC(full.model, direction = "both",
trace = T)
step.model <- stepAIC(full.model, direction = "both",
trace = F)
accuracy(step.model,test)
full.model=lm(BODYFAT ~ ., data = train)
accuracy(full.model,test)
?accuracy
??accuracy
accuracy=predict.lm(full.model,test)
step.model <- stepAIC(full.model, direction = "both",
trace = F)
accuracy=predict.lm(step,test)
accuracy=predict.lm(step.model,test)
View(test)
accuracy
accuracy=predict.lm(models,test)
models$first
models$thetab
models$nbest
?regsubsets
models$which
summary(models)
models$intercept
coef(models)
coef(models,1)
coef(models,2)
coef(models,1:4)
vcov(models,1:4)
models <- regsubsets(BODYFAT~., data = train, nvmax = 4,
method = "seqrep")
summary(models)
coef(models,1:4)
pre2=lm(BODYFAT~ABDOMEN,data=train)
pre2
rm(list = ls())
data = read.csv("BodyFat.csv", row.names = 1)
data = data[, -2]
data = data[c(-39, -42, -48, -96, -76, -182), ]
#train-test split
smp_size <- floor(0.9 * nrow(data))
set.seed(123)
train_ind <- sample(seq_len(nrow(data)), size = smp_size)
train <- data[train_ind, ]
test <- data[-train_ind, ]
library(leaps)
steps <- regsubsets(BODYFAT~., data = train, nvmax = 4,
method = "seqrep")
summary(steps)
#create accuracy matric
model=c()
model=c()
accurcy=c()
#one predictor
step1<-lm(BODYFAT~ABDOMEN,data=train)
prediction=predict.lm(step1,test)
model <- c(model, "step1")
#calculate prediction accuracy
MSE=(test$BODYFAT-prediction)^2
accurcy<- c(accuracy,MSE)
accuracy=c()
accuracy<- c(accuracy,MSE)
#calculate prediction accuracy
MSE=sum((test$BODYFAT-prediction)^2)
accuracy=c()
accuracy<- c(accuracy,MSE)
step2<-lm(BODYFAT~ABDOMEN+WEIGHT,data=train)
prediction=predict.lm(step2,test)
MSE=sum((test$BODYFAT-prediction)^2)#calculate prediction accuracy
model <- c(model, "step2")
accuracy<- c(accuracy,MSE)
step3<-lm(BODYFAT~ABDOMEN+WEIGHT+WRIST,data=train)
prediction=predict.lm(step3,test)
MSE=sum((test$BODYFAT-prediction)^2)#calculate prediction accuracy
model <- c(model, "step3")
accuracy<- c(accuracy,MSE)
step4<-lm(BODYFAT~ABDOMEN+AGE+HEIGHT+WRIST,data=train)
prediction=predict.lm(step4,test)
MSE=sum((test$BODYFAT-prediction)^2)#calculate prediction accuracy
model <- c(model, "step4")
accuracy<- c(accuracy,MSE)
vif(step3)
install.packages("car")
library(car)
vif(step3)
vif(step2)
vif(step1)
vif(step4)
fit2=lm(BODYFAT~ABDOMEN+WRIST)
fit2=lm(BODYFAT~ABDOMEN+WRIST,data=train)
vif(fit2)
?boxcox
coef(step1)
step <- regsubsets(BODYFAT~., data = train, nvmax = 1,
method = "seqrep")
summary(step)
step$rss
step$last
step$ress
boxcox(BODYFAT~ABDOMEN,data=train, lambda = seq(-0.25, 0.25, length = 10))
boxcox(BODYFAT~ABDOMEN,data=train, lambda = seq(0, 10, length = 100))
boxcox(BODYFAT~ABDOMEN,data=train, lambda = seq(-1, 2, length = 100))
par(mfrow=c(1,1))
boxcox(BODYFAT~ABDOMEN,data=train, lambda = seq(-1, 2, length = 100))
plot(ABDOMEN,BODYFAT,data=train)
plot(train$ABDOMEN,train$BODYFAT)
plot(train$WEIGHT,train$BODYFAT)
plot(log(train$WEIGHT),train$BODYFAT)
step2-log=lm(BODYFAT~ABDOMEN+log(WEIGHT),data=train)
step2log=lm(BODYFAT~ABDOMEN+log(WEIGHT),data=train)
prediction=predict.lm(step2log,test)
MSE=sum((test$BODYFAT-prediction)^2)
step2log
step2log$coefficients[1]
prediction=step2log$coefficients[1]+step2log$coefficients[2]*test$ABDOMEN+step2log$coefficients[3]*log(test$WEIGHT)
MSE=sum((test$BODYFAT-prediction)^2)
plot(train$WEIGHT,train$BODYFAT)
plot(exp(train$WEIGHT),train$BODYFAT)
plot(sqrt(train$WEIGHT),train$BODYFAT)
install.packages("shiny")
library(shiny)
rm(list = ls())
require("ggplot2")
#require("glmnet")
#require("DAAG")
data = read.csv("BodyFat.csv", row.names = 1)
setwd("~/Documents/628/model1-bodyfat/628model1-bodyfat/data")
#require("glmnet")
#require("DAAG")
data = read.csv("BodyFat.csv", row.names = 1)
View(data)
data = data[, -2]
#require("glmnet")
#require("DAAG")
data = read.csv("BodyFat.csv", row.names = 1)
str(bodyfat <- read.csv("BodyFat.csv", header=TRUE))
View(bodyfat)
#require("glmnet")
#require("DAAG")
data = read.csv("BodyFat.csv", row.names = 1)
which(data$WEIGHT==max(data$WEIGHT))
which(data$HEIGHT==min(data$HEIGHT))
data[39,]
which(data$AGE==max(data$AGE))
which(data$BMI==max(data$BMI))
which(data$ADIPOSITY==max(data$ADIPOSITY))
which(data$ADIPOSITY==min(data$ADIPOSITY))
summary(data$BODYFAT)
summary(data)
which(data$ADIPOSITY==min(data$ADIPOSITY))
which(data$BODYFAT==0)
#
plot(y = data$BODYFAT, x = 1 / dat$DENSITY, ylab = "bodyfat percentage", xlab = "body density",
main = "BODYFAT vs. 1 / DENSITY")
#
plot(y = data$BODYFAT, x = 1 / data$DENSITY, ylab = "bodyfat percentage", xlab = "body density",
main = "BODYFAT vs. 1 / DENSITY")
text(0.91,20,"48",col = "blue")
text(0.94,20.5,"96",col = "blue")
text(0.94,9,"76",col = "blue")
data[48,]
79.5/2
bodyfat182=495/1.0665-450
bodyfat48=495/1.0665-450
1/1.0665
data[76,]
#detect 48,76,96
plot(y = data$BODYFAT, x = 1 / data$DENSITY, ylab = "bodyfat percentage", xlab = "body density",
main = "BODYFAT vs. 1 / DENSITY")
text(0.91,20,"76",col = "blue")
text(0.94,9,"48",col = "blue")
text(0.94,20.5,"96",col = "blue")
data[96,]
#detect 48,76,96
plot(y = data$BODYFAT, x = 1 / data$DENSITY, ylab = "bodyfat percentage", xlab = "body density",
main = "BODYFAT vs. 1 / DENSITY")
text(0.91,20,"96",col = "blue")
text(0.94,9,"48",col = "blue")
text(0.94,20.5,"76",col = "blue")
bodyfat96=495/1.0991-450
bodyfat76=495/1.0666-450
bodyfat96=495/1.0991-450
data[96,]
data[39,]
data[39,]
#bmi=weight/(height)^2*703
weight39=48.9/703*72.25^2 #same as the record
height42=sqrt(703*205/29.9) #different from the record
data[42,]
data[182,]
bodyfat182=495/1.1089-450 #negative value
rm(list = ls())
#require("glmnet")
#require("DAAG")
data = read.csv("BodyFat.csv", row.names = 1)
summary(data)
#detect outlier 39,42,182 by
which(data$WEIGHT==max(data$WEIGHT))#39
which(data$HEIGHT==min(data$HEIGHT))#42
which(data$BODYFAT==0)#182
#bmi=weight/(height)^2*703
data[39,]
weight39=48.9/703*72.25^2 #same as the record,keep 39
data[42,]
height42=sqrt(703*205/29.9) #different from the record, impute new height
data[182,]
bodyfat182=495/1.1089-450 #negative value, delete 182
#detect 48,76,96
plot(y = data$BODYFAT, x = 1 / data$DENSITY, ylab = "bodyfat percentage", xlab = "body density",
main = "BODYFAT vs. 1 / DENSITY")
text(0.91,20,"96",col = "blue")
text(0.94,9,"48",col = "blue")
text(0.94,20.5,"76",col = "blue")
#treat bodyfat calculator as reference https://www.active.com/fitness/calculators/bodyfat
data[48,]
bodyfat48=495/1.0665-450 #bodyfay wrong
data[96,]
bodyfat96=495/1.0991-450 #density wrong
data[76,]
bodyfat76=495/1.0666-450 #density wrong
#outlier process
data$HEIGHT[42]==height42
data$BODYFAT[48]==bodyfat48
data[-182,]
data[-182,]
View(data)
data[-182, ]
View(data)
data[-c(182), ]
data[182,]
data[-c(182),]
data=data[-c(182),]
View(data)
View(data)
rm(list = ls())
data = read.csv("BodyFat.csv", row.names = 1)
summary(data)
#detect outlier 39,42,182 by
which(data$WEIGHT==max(data$WEIGHT))#39
which(data$HEIGHT==min(data$HEIGHT))#42
which(data$BODYFAT==0)#182
#bmi=weight/(height)^2*703
data[39,]
weight39=48.9/703*72.25^2 #same as the record,keep 39
data[42,]
height42=sqrt(703*205/29.9) #different from the record, impute new height
data[182,]
bodyfat182=495/1.1089-450 #negative value, delete 182
#detect 48,76,96
plot(y = data$BODYFAT, x = 1 / data$DENSITY, ylab = "bodyfat percentage", xlab = "body density",
main = "BODYFAT vs. 1 / DENSITY")
text(0.91,20,"96",col = "blue")
text(0.94,9,"48",col = "blue")
text(0.94,20.5,"76",col = "blue")
#treat bodyfat calculator as reference https://www.active.com/fitness/calculators/bodyfat
data[48,]
bodyfat48=495/1.0665-450 #bodyfay wrong
data[96,]
bodyfat96=495/1.0991-450 #density wrong
data[76,]
bodyfat76=495/1.0666-450 #density wrong
#outlier process
data$HEIGHT[42]==height42
data$BODYFAT[48]==bodyfat48
data=data[-182,]
#change unit for weight,height to kg,cm
data$WEIGHT=0.45*data$WEIGHT
data$HEIGHT=2.54*data$HEIGHT
View(data)
data=data[,-2]#remove density
View(data)
library(leaps)
install.packages("leaps")
library(leaps)
steps <- regsubsets(BODYFAT~., data = data, nvmax = 4,
method = "seqrep")
summary(steps)
#one predictor
step1<-lm(BODYFAT~ABDOMEN,data=data)
summary(step1)
step1$residuals
#two predictor
step2<-lm(BODYFAT~ABDOMEN+WEIGHT,data=data)
summary(step2)
#three predictor
step3<-lm(BODYFAT~ABDOMEN+WEIGHT+WRIST,data=data)
summary(step3)
#four predictor
step4<-lm(BODYFAT~ABDOMEN+WEIGHT+FOREARM+WRIST,data=data)
summary(step4)
install.packages("MASS")
?lm.ridge
library(MASS)
?lm.ridge
lm.ridge(BODYFAT~ABDOMEN,data=data)
lm.ridge(BODYFAT~ABDOMEN+WEIGHT,data=data)
step2Ridge=lm.ridge(BODYFAT~ABDOMEN+WEIGHT,data=data)
summary(step2Ridge)
View(step2Ridge)
step2Ridge=lm.ridge(BODYFAT~ABDOMEN+WEIGHT,data=data,lambda = seq(0,10,0.1))
select(step2Ridge)
step2Ridge=lm.ridge(BODYFAT~ABDOMEN+WEIGHT,data=data,lambda = 0.2)
summary(step2Ridge)
View(step2Ridge)
summary(step2)
res(step2Ridge)
ridge2=lm.ridge(BODYFAT~ABDOMEN+WEIGHT,data=data,lambda = seq(0,10,0.1))
select(ridge2)
ridge2=lm.ridge(BODYFAT~ABDOMEN+WEIGHT,data=data,lambda = 0.2)
summary(ridge2)
pred.ridge2 <- coef(ridge2)[1] + coef(ridge2)[2]*data$ABDOMEN + coef(ridge2)[3]*data$WEIGHT
# Sum of Squares Total and Error
y=data$BODYFAT
y_predicted=pred.ridge2
sst <- sum((y - mean(y))^2)
sse <- sum((y_predicted - y)^2)
# R squared
rsq <- 1 - sse / sst
summart(step2)
summary(step2)
#
library(car)
install.packages("car")
#
library(car)
library(carData)
#
library(car)
vif(ridge2)
#ABDOMEN+WRIST
try=lm(BODYFAT~ABDOMEN+WRIST,data=data)
summary(try)
#ridge ABDOMEN+WRIST
try2Ridge=lm.ridge(BODYFAT~ABDOMEN+WRIST,data=data,lambda = seq(0,10,0.1))
which(try2Ridge)
select(try2Ridge)
try2Ridge=lm.ridge(BODYFAT~ABDOMEN+WRIST,data=data,lambda = 0.5)
pred.try2ridge <- coef(ridge2)[1] + coef(ridge2)[2]*data$ABDOMEN + coef(ridge2)[3]*data$WRIST
# calculate R squared
y=data$BODYFAT
y_predicted=pred.try2ridge
sst <- sum((y - mean(y))^2) #Sum of Squares Total
sse <- sum((y_predicted - y)^2) #SSE
rsq <- 1 - sse / sst
#ridge ABDOMEN+WRIST
try2Ridge=lm.ridge(BODYFAT~ABDOMEN+WRIST,data=data,lambda = seq(0,10,0.1))
select(try2Ridge)
try2Ridge=lm.ridge(BODYFAT~ABDOMEN+WRIST,data=data,lambda = 0.5)
pred.try2ridge <- coef(try2Ridge)[1] + coef(try2Ridge)[2]*data$ABDOMEN + coef(try2Ridge)[3]*data$WRIST
# calculate R squared
y=data$BODYFAT
y_predicted=pred.try2ridge
sst <- sum((y - mean(y))^2) #Sum of Squares Total
sse <- sum((y_predicted - y)^2) #SSE
rsq <- 1 - sse / sst
View(try2Ridge)
summary(try2Ridge)
summary(try)
try2Ridge$coef
summary(ridge2)
summary(step2)
new=data$WEIGHT*data$WRIST
new=as.list(data$WEIGHT*data$WRIST)
try=lm(data$BODYFAT~data$ABDOMEN+new)
try=lm(data$BODYFAT~data$ABDOMEN+new)
data=(data,new)
data=data.frame(data,new)
View(data)
View(new)
new=as.vector(data$WEIGHT*data$WRIST)
data=data.frame(data,new)
data$new
rm(list = ls())
data = read.csv("BodyFat.csv", row.names = 1)
summary(data)
#detect outlier 39,42,182 by
which(data$WEIGHT==max(data$WEIGHT))#39
which(data$HEIGHT==min(data$HEIGHT))#42
which(data$BODYFAT==0)#182
#bmi=weight/(height)^2*703
data[39,]
weight39=48.9/703*72.25^2 #same as the record,keep 39
data[42,]
height42=sqrt(703*205/29.9) #different from the record, impute new height
data[182,]
bodyfat182=495/1.1089-450 #negative value, delete 182
#detect 48,76,96
plot(y = data$BODYFAT, x = 1 / data$DENSITY, ylab = "bodyfat percentage", xlab = "body density",
main = "BODYFAT vs. 1 / DENSITY")
text(0.91,20,"96",col = "blue")
text(0.94,9,"48",col = "blue")
text(0.94,20.5,"76",col = "blue")
#treat bodyfat calculator as reference https://www.active.com/fitness/calculators/bodyfat
data[48,]
bodyfat48=495/1.0665-450 #bodyfay wrong
data[96,]
bodyfat96=495/1.0991-450 #density wrong
data[76,]
bodyfat76=495/1.0666-450 #density wrong
data$HEIGHT[42]==height42
data$BODYFAT[48]==bodyfat48
data=data[-182,]
#change unit for weight,height to kg,cm
data$WEIGHT=0.45*data$WEIGHT
data$HEIGHT=2.54*data$HEIGHT
data=data[,-2]#remove density
library(leaps)
steps <- regsubsets(BODYFAT~., data = data, nvmax = 4,
method = "seqrep")
summary(steps)
coef(models,1:4)
step1<-lm(BODYFAT~ABDOMEN,data=data)
#three predictor
step3<-lm(BODYFAT~ABDOMEN+WEIGHT+WRIST,data=data)
#four predictor
step4<-lm(BODYFAT~ABDOMEN+WEIGHT+FOREARM+WRIST,data=data)
#ridge regression
library(MASS)
new=as.vector(data$WEIGHT*data$WRIST)
data=data.frame(data,new)
try=lm(data$BODYFAT~data$ABDOMEN+data$new)
summary(try)
data[48,]
data$HEIGHT[42]
height42
data$HEIGHT[42]==height42
rm(list = ls())
data = read.csv("BodyFat.csv", row.names = 1)
summary(data)
#detect outlier 39,42,182 by
which(data$WEIGHT==max(data$WEIGHT))#39
which(data$HEIGHT==min(data$HEIGHT))#42
which(data$BODYFAT==0)#182
data[39,]
weight39=48.9/703*72.25^2 #same as the record,keep 39
data[42,]
height42=sqrt(703*205/29.9) #different from the record, impute new height
data[182,]
bodyfat182=495/1.1089-450 #negative value, delete 182
#detect 48,76,96
plot(y = data$BODYFAT, x = 1 / data$DENSITY, ylab = "bodyfat percentage", xlab = "body density",
main = "BODYFAT vs. 1 / DENSITY")
text(0.91,20,"96",col = "blue")
text(0.94,9,"48",col = "blue")
text(0.94,20.5,"76",col = "blue")
#treat bodyfat calculator as reference https://www.active.com/fitness/calculators/bodyfat
data[48,]
bodyfat48=495/1.0665-450 #bodyfay wrong
data[96,]
bodyfat96=495/1.0991-450 #density wrong
data[76,]
bodyfat76=495/1.0666-450 #density wrong
#outlier process
data$HEIGHT[42]=height42
data$BODYFAT[48]=bodyfat48
data=data[-182,]
#change unit for weight,height to kg,cm
data$WEIGHT=0.45*data$WEIGHT
data$HEIGHT=2.54*data$HEIGHT
data=data[,-2]#remove density
#use stepwise method
library(leaps)
steps <- regsubsets(BODYFAT~., data = data, nvmax = 4,
method = "seqrep")
summary(steps)
#shiny
library(shiny)
library(MASS)
ridge2=lm.ridge(BODYFAT~ABDOMEN+WEIGHT,data=data,lambda = seq(0,10,0.1))
select(ridge2)
ridge2=lm.ridge(BODYFAT~ABDOMEN+WEIGHT,data=data,lambda = 0.2)
pred.ridge2 <- coef(ridge2)[1] + coef(ridge2)[2]*data$ABDOMEN + coef(ridge2)[3]*data$WEIGHT
# calculate R squared
y=data$BODYFAT
y_predicted=pred.ridge2
sst <- sum((y - mean(y))^2) #Sum of Squares Total
sse <- sum((y_predicted - y)^2) #SSE
rsq <- 1 - sse / sst # R squared
